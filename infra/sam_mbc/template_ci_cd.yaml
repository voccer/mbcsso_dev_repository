AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9
  Sam for CI

Parameters:
  SystemName:
    Type: String
    Default: mbcsso
    Description: System name
  Env:
    Type: String
    Default: dev
    Description: Environment
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    Default: ''
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    Default: ''
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to master if not specified.
    Type: String
    Default: main
  ConnectionId:
    Description: Connection ID for codestar
    Type: String
    Default: ''
  BuildSpecFilePath:
    Description: >-
      Relative BuildSpec file path for build stage. For more information, see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
    Type: String
    Default: 'buildspec.yaml'

Conditions:
  HasConnectionId: !Not [!Equals [!Ref ConnectionId, '']]

Rules:
  ValidateGitHub:
    Assertions:
      - Assert: !Not [!Equals [!Ref GitHubOwner, '']]
        AssertDescription: 'GitHubOwner must be specified when SourceCodeProvider is GitHub'
      - Assert: !Not [!Equals [!Ref GitHubRepo, '']]
        AssertDescription: 'GitHubRepo must be specified when SourceCodeProvider is GitHub'
      - Assert: !Not [!Equals [!Ref GitHubBranch, '']]
        AssertDescription: 'GitHubBranch must be specified when SourceCodeProvider is GitHub'

Resources:
  Artifacts:
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
    Type: AWS::S3::Bucket

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${SystemName}-${Env}-pipeline'
      ArtifactStore:
        Location: !Ref Artifacts
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn:
                  - !If
                    - HasConnectionId
                    - !Sub 'arn:${AWS::Partition}:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/${ConnectionId}'
                    - !Ref GitHubConnection
                FullRepositoryId: !Sub '${GitHubOwner}/${GitHubRepo}'
                BranchName: !Ref GitHubBranch
                OutputArtifactFormat: 'CODE_ZIP'
              OutputArtifacts:
                - Name: SourceArtifact

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub 'Used by CodePipeline. Created by CloudFormation ${AWS::StackId}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'codepipeline.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Policies:
        - AmazonS3FullAccess
        - PolicyName: codebuild-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource:
                  - !GetAtt BuildProject.Arn
        - PolicyName: codestar-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'codestar-connections:UseConnection'
                Resource:
                  - !Ref GitHubConnection

  GitHubConnection:
    Condition: !Not HasConnectionId
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: !Sub '${SystemName}-${Env}-github-connection'
      ProviderType: GitHub

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${SystemName}-${Env}-build-project'
      ServiceRole: !GetAtt BuildProjectRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecFilePath
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/standard:5.0'
        Type: 'LINUX_CONTAINER'
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: REGION
            Value: !Ref AWS::Region
          - Name: SYSTEM_NAME
            Value: !Ref SystemName
          - Name: ENV
            Value: !Ref Env

  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${SystemName}-${Env}-codebuild-access-policy
      Roles:
        - !Ref BuildProjectRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}/*
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${Artifacts}
          - Action:
              - lambda:*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:*
          - Action:
              - ecr:*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/*'
  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub 'Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}'
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/
