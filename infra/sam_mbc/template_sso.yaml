AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9

  Sam for SSO

Globals:
  Function:
    Environment:
      Variables:
        REGION: !Ref Region
        ENV: !Ref Env
        NAME: !Ref Name

Parameters:
  Region:
    Type: String
    Default: ap-northeast-1
  Name:
    Type: String
    Default: mbcsso
  Env:
    Type: String
    Default: dev

Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: LambdaRequestAuthorizer
        Authorizers:
          LambdaRequestAuthorizer:
            FunctionArn: !GetAtt SsoAuthFunction.Arn
            Identity:
              Headers:
                - Authorization
            AuthorizerPayloadFormatVersion: 2.0
            EnableSimpleResponses: true
            FunctionPayloadType: REQUEST
  # permissions
  ApiPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt SsoAuthFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/authorizers/*'

  SsoAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      FunctionName: !Sub ${Name}_${Env}_SsoAuthFunction
      Tags:
        name: !Ref Name
        env: !Ref Env
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/sso_authorizer/
      DockerTag: python3.9-v1

  SsoFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      FunctionName: !Sub ${Name}_${Env}_SsoFunction
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub ${Name}_${Env}_Config
        - Statement:
            - Sid: CreateTable
              Effect: Allow
              Action:
                - dynamodb:CreateTable
              Resource: '*'
      Events:
        AddSsoApi:
          Type: HttpApi
          Properties:
            Path: /sso
            Method: POST
            ApiId: !Ref HttpApi
        UpdateSsoApi:
          Type: HttpApi
          Properties:
            Path: /sso/{id}
            Method: PUT
            ApiId: !Ref HttpApi
        DeleteSsoApi:
          Type: HttpApi
          Properties:
            Path: /sso/{id}
            Method: DELETE
            ApiId: !Ref HttpApi
      Tags:
        name: !Ref Name
        env: !Ref Env
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/sso_function
      DockerTag: python3.9-v1
